<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
        "http://www.w3.org/TR/html4/strict.dtd">
<html lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <title>Report for <%= host %></title>
  <script type="text/javascript" src="http://nstielau.github.com/autograph/js/jquery.js"></script>
  <script type="text/javascript" src="http://nstielau.github.com/autograph/js/jquery.flot.js"></script>
  <style type="text/css">
  body,
  html {
    margin:0;
    padding:0;
    color:#000;
  }
  body {
    min-width:950px;
  }
  #wrap {
    margin:0 auto;
    width:950px;
  }
  #header h1 {
      padding:5px;
      margin:0;
      text-align: center;
    }
  #header h3 {
    margin: 0;
  }
  #nav {

    padding:5px;
  }
  #nav ul{
    margin:0;
    padding:0;
    list-style:none;
  }
  #nav li{
    display:inline;
    margin:0;
    padding:0;
  }
  #main {
    float:right;
    width:700px;
  }
  #main h2, #main h3, #main p {
    padding:0 10px;
    }
  #sidebar {
    float:left;
    width:240px;
  }
  #sidebar ul {
    margin-bottom:0;
    }
  #sidebar h3, #sidebar p {
  padding:0 10px 0 0;
  }
  #footer {
    clear:both;
  }
  #footer p {
    padding:5px;
    margin:0;
    }

  div.report {
    background: #FFFFFF;
  }
  </style>
</head>
<body>
<div id="wrap">
  <div id="header">
    <h1>Load testing report</h1>
    <h3>Date: <%= date %></h3>
    <h3>Host: <%= host %></h3>
  <div id="nav">

  </div>
  <div id="sidebar">
    <div style="display:none">
      <h3>Tested Pages</h3>
      <ul>
        <li><a href="#" onclick="show_report('overview');" title="Overview">Overview</a></li>
        <% uris.each do |uri|%>
        <li><a href="#" onclick="show_report('page_<%= uri %>');" title="<%= uri %>"><%= uri %></a></li>
        <% end %>
      </ul>
    </div>
    <% if notes %>
      <h3>Report Notes</h3>
      <p><%= notes %></p>
    <% end %>
    <h3>Info</h3>
    <ul>
      <li><a href="#" onclick="show_report('graph_discussion');" title="Discussion">Discussion</a></li>
    </ul>
    <h3>Tests</h3>
    <div id="choices"></div>

  </div>
  <div id="main">
    <% graphs.each_pair do |k,g| %>
      <h2><%= g.title %></h2>
      <div id="<%= k %>" style="width:600px;height:300px;"></div>
    <% end %>

<div id="overview" class='report'>
  <%= graphs[:max_request_rate].inspect %>
</div>

<div id="graph_discussion" class='report' style="display:none;">
  <h3>Methods</h3>
  <p>
    Use HTTPERF to load different pages a fixed number of times, at a fixed rate, and record the response time and rate at which connections are accepted.  By varying the rate, we can see how the response time and connection rate are effected by increased load on the server.
  </p>
  <h3>Graphs</h3>
  <h4>Demanded vs. Achieved request rate</h4>
  <p>
  Ideally, this graph would be a straight line at 45 degrees; for every request that is sent to the server, it accepts a connection, regardless of how many concurrent requests are made.  Realistically, this graph will start linear and degrade as network or software bottlenecks are hit. The point at which this graph breaks linearity indicates the maximum possible concurrent requests the system can successfully serve.
  </p>
  <h4>Demanded Request Rate vs. response time</h4>
  <p>
  Ideally, this graph would be flat and low, indicating consistent and fast responses times.  Realistically, this graph will either be slightly angled or flat followed by a dramatic uptick.  The point at which the response times dramatically increase will coincide with the point at which it cannot serve all requests.
  </p>
• Find which pages are heavier/lighter than others
• Replay a log (with a little work)

• Actually hits your app with load, doesn't just extrapolate out from a few data points
• Start broad and zero in on connection limits
• Run from a server, not your laptop
</div>

    <% reports.each do |uri, report| %>
      <div id="page_<%= uri %>" class='report' >
        <p>Report for <%= "http://#{host}#{uri}" %></p>
<pre>
<%= report.to_s %>
</pre>
      </div>
    <% end %>
  </div>
  <div id="footer" align="center">
    <p>Generated at <%= date %></p>
    <div>
    <p><a onclick="document.getElementById('command_container').style.display = 'block';">Show Command<a/></p>
    <div id="command_container" style="display:none">
      <pre><%= command_run %></pre>
    </div>
    </div>
  </div>
</div>
  <script language="javascript" type="text/javascript">
    var acolor;
    var default_graph_options = {
      series: {
        lines: { show: true, lineWidth: 3 },
        points: { show: true, radius: 4 }
      },
      legend: {
        show: true,
        backgroundColor: '#FFF',
        backgroundOpacity: 0.9
      },
      series: {
        lines: { show: true, lineWidth: 3 },
        points: { show: true, fill: false },
        shadowSize: 0,
      },
      xaxis: {
      },
      yaxis: {
        show: true,
      },
      grid: {
        show: true,
        backgroundColor: null,
        borderWidth: 0,
        hoverable: true,
        tickColor: "#E1E8F0",
      },
      colors: ["#5bba47","#d86b6d","#3d8aea","#333333"]
    };

    // Callback function to show the tooltip
    function showTooltip(item) {
      var contents = "(" + item.datapoint[1] + "," + item.datapoint[0] + ")";
      var x = item.pageX;
      var y = item.pageY - 10;

      var obj = $('<div id="flot-tooltip">' + contents + '</div>').css( {
        padding: '5px',
        position: 'absolute',
        minWidth: '5em',
        display: 'block',
        top:  y+5,
        left: x+5,
        zIndex: 9999
      });

      obj.appendTo('body').fadeIn('200');
    }

    // Var to hold our previous point
    var previousPoint = null;

    // Bind to the plothover so we can show a tooltip
    $(".flot-graph").bind("plothover", function (event, pos, item) {
      if (item) {
        if (previousPoint != item.datapoint) {
          previousPoint = item.datapoint;
          $("#flot-tooltip").remove();
          showTooltip(item);
        }
      } else {
        $('#flot-tooltip').remove().fadeOut('200');
        previousPoint = null;
      }
    });

    var request_rate_datasets = {
<%=
  dataset_id=0;
  data_string = graphs[:request_rate].series.map do |s|
    points = []
    s.x_values.each_with_index do |x,i|
      points << "[#{s.x_values[i]}, #{s.y_values[i]}]"
    end
    "'#{dataset_id=dataset_id+1}' : {label:  \"#{s.label}\", data: [#{points.join(", ")}]}"
  end.join(", \n")
  data_string
%>
    };

    var response_time_datasets = {
<%=
  dataset_id=0;
  data_string = graphs[:response_time].series.map do |s|
    points = []
    s.x_values.each_with_index do |x,i|
      points << "[#{s.x_values[i]}, #{s.y_values[i]}]"
    end
    "'#{dataset_id=dataset_id+1}' : {label:  \"#{s.label}\", data: [#{points.join(", ")}]}"
  end.join(", \n")
  data_string
%>
    };

    // hard-code color indices to prevent them from shifting as
    // countries are turned on/off
    var i = 0;
    $.each(request_rate_datasets, function(key, val) {
        val.color = i;
        ++i;
    });
    i = 0;
    $.each(response_time_datasets, function(key, val) {
        val.color = i;
        ++i;
    });

    // insert checkboxes
    var choiceContainer = $("#choices");
    $.each(request_rate_datasets, function(key, val) {
        choiceContainer.append('<br/><input type="checkbox" name="' + key +
                               '" checked="checked" id="id' + key + '">' +
                               '<label for="id' + key + '">'
                                + val.label + '</label>');
    });
    choiceContainer.find("input").click(plotAccordingToChoices);


    function plotAccordingToChoices() {
        var data1 = [];
        var data2 = [];

        choiceContainer.find("input:checked").each(function () {
            var key = $(this).attr("name");
            if (key && request_rate_datasets[key])
                data1.push(request_rate_datasets[key]);
              if (key && response_time_datasets[key])
                  data2.push(response_time_datasets[key]);
        });

        if (data1.length > 0)
            $.plot($("#request_rate"), data1, {
                yaxis: { min: 0 },
                xaxis: { tickDecimals: 0 }
            });


        if (data2.length > 0)
            $.plot($("#response_time"), data2, {
                yaxis: { min: 0 },
                xaxis: { tickDecimals: 0 }
            });
    }

    plotAccordingToChoices();


</script>
</body>
</html>

